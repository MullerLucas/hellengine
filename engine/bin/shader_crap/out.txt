> running: ./tools/build.sh -r
SHOULD_CHECK: ''
  SHOULD_RUN: 'YES'
start running project...
START
DONE
Pair {
    rule: file,
    span: Span {
        str: "SCOPE: GLOBAL\n{\n    uniform buffer {\n        vec4 color;\n        mat2 model;\n    } global;\n\n    uniform sampler2D texture;\n}\n\nSCOPE: LOCAL\n{\n}\n\nSHADER: VERT\n{\n    HELLPROGRAM\n\n    layout(location = 0) in vec3 in_pos;\n    layout(location = 1) in vec2 in_tex_coord;\n    layout(location = 0) out vec2 out_tex_coord;\n\n    void main() {\n        // gl_Position = global_ubo.view_proj * push_constants.model *  vec4(in_pos, 1.0);\n        mat4 model = local_storage.data[push_constants.local_idx].model;\n        gl_Position = global_ubo.view_proj * model *  vec4(in_pos, 1.0);\n        // gl_Position = global_ubo.view_proj * push_constants.model * vec4(in_pos, 1.0);\n    }\n\n    ENDHELL\n}\n\nSHADER: FRAG\n{\n    HELLPROGRAM\n\n    layout(location = 0) in vec2 in_tex_coord;\n    layout(location = 0) out vec4 out_color;\n\n    void main() {\n        out_color = texture(instance_tex, in_tex_coord);\n        out_color *= shared_ubo.shared_color;\n        out_color *= instance_ubo.instance_color;\n        // out_color *= local_ubo.local_color;\n        out_color = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n\n    ENDHELL\n}\n",
        start: 0,
        end: 1091,
    },
    inner: [
        Pair {
            rule: scope_decl,
            span: Span {
                str: "SCOPE: GLOBAL\n{\n    uniform buffer {\n        vec4 color;\n        mat2 model;\n    } global;\n\n    uniform sampler2D texture;\n}",
                start: 0,
                end: 124,
            },
            inner: [
                Pair {
                    rule: ident,
                    span: Span {
                        str: "GLOBAL",
                        start: 7,
                        end: 13,
                    },
                    inner: [],
                },
                Pair {
                    rule: scope_block,
                    span: Span {
                        str: "{\n    uniform buffer {\n        vec4 color;\n        mat2 model;\n    } global;\n\n    uniform sampler2D texture;\n}",
                        start: 14,
                        end: 124,
                    },
                    inner: [
                        Pair {
                            rule: uniform_buffer,
                            span: Span {
                                str: "uniform buffer {\n        vec4 color;\n        mat2 model;\n    } global;",
                                start: 20,
                                end: 90,
                            },
                            inner: [
                                Pair {
                                    rule: var_ubo,
                                    span: Span {
                                        str: "vec4 color;\n        ",
                                        start: 45,
                                        end: 65,
                                    },
                                    inner: [
                                        Pair {
                                            rule: type_ubo,
                                            span: Span {
                                                str: "vec4",
                                                start: 45,
                                                end: 49,
                                            },
                                            inner: [
                                                Pair {
                                                    rule: type_vec,
                                                    span: Span {
                                                        str: "vec4",
                                                        start: 45,
                                                        end: 49,
                                                    },
                                                    inner: [],
                                                },
                                            ],
                                        },
                                        Pair {
                                            rule: ident,
                                            span: Span {
                                                str: "color",
                                                start: 50,
                                                end: 55,
                                            },
                                            inner: [],
                                        },
                                    ],
                                },
                                Pair {
                                    rule: var_ubo,
                                    span: Span {
                                        str: "mat2 model;\n    ",
                                        start: 65,
                                        end: 81,
                                    },
                                    inner: [
                                        Pair {
                                            rule: type_ubo,
                                            span: Span {
                                                str: "mat2",
                                                start: 65,
                                                end: 69,
                                            },
                                            inner: [
                                                Pair {
                                                    rule: type_mat,
                                                    span: Span {
                                                        str: "mat2",
                                                        start: 65,
                                                        end: 69,
                                                    },
                                                    inner: [],
                                                },
                                            ],
                                        },
                                        Pair {
                                            rule: ident,
                                            span: Span {
                                                str: "model",
                                                start: 70,
                                                end: 75,
                                            },
                                            inner: [],
                                        },
                                    ],
                                },
                                Pair {
                                    rule: ident,
                                    span: Span {
                                        str: "global",
                                        start: 83,
                                        end: 89,
                                    },
                                    inner: [],
                                },
                            ],
                        },
                        Pair {
                            rule: uniform_sampler,
                            span: Span {
                                str: "uniform sampler2D texture;",
                                start: 96,
                                end: 122,
                            },
                            inner: [
                                Pair {
                                    rule: type_sampler,
                                    span: Span {
                                        str: "sampler2D ",
                                        start: 104,
                                        end: 114,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: ident,
                                    span: Span {
                                        str: "texture",
                                        start: 114,
                                        end: 121,
                                    },
                                    inner: [],
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        Pair {
            rule: scope_decl,
            span: Span {
                str: "SCOPE: LOCAL\n{\n}",
                start: 126,
                end: 142,
            },
            inner: [
                Pair {
                    rule: ident,
                    span: Span {
                        str: "LOCAL",
                        start: 133,
                        end: 138,
                    },
                    inner: [],
                },
                Pair {
                    rule: scope_block,
                    span: Span {
                        str: "{\n}",
                        start: 139,
                        end: 142,
                    },
                    inner: [],
                },
            ],
        },
        Pair {
            rule: shader_decl,
            span: Span {
                str: "SHADER: VERT\n{\n    HELLPROGRAM\n\n    layout(location = 0) in vec3 in_pos;\n    layout(location = 1) in vec2 in_tex_coord;\n    layout(location = 0) out vec2 out_tex_coord;\n\n    void main() {\n        // gl_Position = global_ubo.view_proj * push_constants.model *  vec4(in_pos, 1.0);\n        mat4 model = local_storage.data[push_constants.local_idx].model;\n        gl_Position = global_ubo.view_proj * model *  vec4(in_pos, 1.0);\n        // gl_Position = global_ubo.view_proj * push_constants.model * vec4(in_pos, 1.0);\n    }\n\n    ENDHELL\n}",
                start: 144,
                end: 679,
            },
            inner: [
                Pair {
                    rule: ident,
                    span: Span {
                        str: "VERT",
                        start: 152,
                        end: 156,
                    },
                    inner: [],
                },
                Pair {
                    rule: shader_block,
                    span: Span {
                        str: "{\n    HELLPROGRAM\n\n    layout(location = 0) in vec3 in_pos;\n    layout(location = 1) in vec2 in_tex_coord;\n    layout(location = 0) out vec2 out_tex_coord;\n\n    void main() {\n        // gl_Position = global_ubo.view_proj * push_constants.model *  vec4(in_pos, 1.0);\n        mat4 model = local_storage.data[push_constants.local_idx].model;\n        gl_Position = global_ubo.view_proj * model *  vec4(in_pos, 1.0);\n        // gl_Position = global_ubo.view_proj * push_constants.model * vec4(in_pos, 1.0);\n    }\n\n    ENDHELL\n}",
                        start: 157,
                        end: 679,
                    },
                    inner: [
                        Pair {
                            rule: raw_code,
                            span: Span {
                                str: "layout(location = 0) in vec3 in_pos;\n    layout(location = 1) in vec2 in_tex_coord;\n    layout(location = 0) out vec2 out_tex_coord;\n\n    void main() {\n        // gl_Position = global_ubo.view_proj * push_constants.model *  vec4(in_pos, 1.0);\n        mat4 model = local_storage.data[push_constants.local_idx].model;\n        gl_Position = global_ubo.view_proj * model *  vec4(in_pos, 1.0);\n        // gl_Position = global_ubo.view_proj * push_constants.model * vec4(in_pos, 1.0);\n    }",
                                start: 180,
                                end: 664,
                            },
                            inner: [
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "layout(location = 0) in vec3 in_pos;",
                                        start: 180,
                                        end: 216,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "layout(location = 1) in vec2 in_tex_coord;",
                                        start: 221,
                                        end: 263,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "layout(location = 0) out vec2 out_tex_coord;",
                                        start: 268,
                                        end: 312,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "void main() {",
                                        start: 318,
                                        end: 331,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "// gl_Position = global_ubo.view_proj * push_constants.model *  vec4(in_pos, 1.0);",
                                        start: 340,
                                        end: 422,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "mat4 model = local_storage.data[push_constants.local_idx].model;",
                                        start: 431,
                                        end: 495,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "gl_Position = global_ubo.view_proj * model *  vec4(in_pos, 1.0);",
                                        start: 504,
                                        end: 568,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "// gl_Position = global_ubo.view_proj * push_constants.model * vec4(in_pos, 1.0);",
                                        start: 577,
                                        end: 658,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "}",
                                        start: 663,
                                        end: 664,
                                    },
                                    inner: [],
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        Pair {
            rule: shader_decl,
            span: Span {
                str: "SHADER: FRAG\n{\n    HELLPROGRAM\n\n    layout(location = 0) in vec2 in_tex_coord;\n    layout(location = 0) out vec4 out_color;\n\n    void main() {\n        out_color = texture(instance_tex, in_tex_coord);\n        out_color *= shared_ubo.shared_color;\n        out_color *= instance_ubo.instance_color;\n        // out_color *= local_ubo.local_color;\n        out_color = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n\n    ENDHELL\n}",
                start: 681,
                end: 1090,
            },
            inner: [
                Pair {
                    rule: ident,
                    span: Span {
                        str: "FRAG",
                        start: 689,
                        end: 693,
                    },
                    inner: [],
                },
                Pair {
                    rule: shader_block,
                    span: Span {
                        str: "{\n    HELLPROGRAM\n\n    layout(location = 0) in vec2 in_tex_coord;\n    layout(location = 0) out vec4 out_color;\n\n    void main() {\n        out_color = texture(instance_tex, in_tex_coord);\n        out_color *= shared_ubo.shared_color;\n        out_color *= instance_ubo.instance_color;\n        // out_color *= local_ubo.local_color;\n        out_color = vec4(1.0, 0.0, 0.0, 1.0);\n    }\n\n    ENDHELL\n}",
                        start: 694,
                        end: 1090,
                    },
                    inner: [
                        Pair {
                            rule: raw_code,
                            span: Span {
                                str: "layout(location = 0) in vec2 in_tex_coord;\n    layout(location = 0) out vec4 out_color;\n\n    void main() {\n        out_color = texture(instance_tex, in_tex_coord);\n        out_color *= shared_ubo.shared_color;\n        out_color *= instance_ubo.instance_color;\n        // out_color *= local_ubo.local_color;\n        out_color = vec4(1.0, 0.0, 0.0, 1.0);\n    }",
                                start: 717,
                                end: 1075,
                            },
                            inner: [
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "layout(location = 0) in vec2 in_tex_coord;",
                                        start: 717,
                                        end: 759,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "layout(location = 0) out vec4 out_color;",
                                        start: 764,
                                        end: 804,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "void main() {",
                                        start: 810,
                                        end: 823,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "out_color = texture(instance_tex, in_tex_coord);",
                                        start: 832,
                                        end: 880,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "out_color *= shared_ubo.shared_color;",
                                        start: 889,
                                        end: 926,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "out_color *= instance_ubo.instance_color;",
                                        start: 935,
                                        end: 976,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "// out_color *= local_ubo.local_color;",
                                        start: 985,
                                        end: 1023,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "out_color = vec4(1.0, 0.0, 0.0, 1.0);",
                                        start: 1032,
                                        end: 1069,
                                    },
                                    inner: [],
                                },
                                Pair {
                                    rule: raw_code_line,
                                    span: Span {
                                        str: "}",
                                        start: 1074,
                                        end: 1075,
                                    },
                                    inner: [],
                                },
                            ],
                        },
                    ],
                },
            ],
        },
        Pair {
            rule: EOI,
            span: Span {
                str: "",
                start: 1091,
                end: 1091,
            },
            inner: [],
        },
    ],
}
done